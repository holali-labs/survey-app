generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id       String   @id
  email    String?  @unique
  name     String?
  provider Provider @default(local)
  surveys  Survey[]

  @@map("users")
}

model Survey {
  id          String    @id @default(uuid())
  userId      String
  title       String
  description String?
  isPublic    Boolean   @default(true)
  createdAt   DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt   DateTime? @updatedAt @db.Timestamptz(6)
  expiredAt   DateTime?

  questions Question[]
  responses Response[]
  User      User       @relation(fields: [userId], references: [id])

  @@index([userId])
  @@map("surveys")
}

model Question {
  id         BigInt       @id @default(autoincrement())
  surveyId   String
  type       QuestionType
  label      String
  isRequired Boolean      @default(false)
  order      Int
  fileUrl    String?

  answers Answer[]
  choices Choice[]
  survey  Survey   @relation(fields: [surveyId], references: [id])

  @@index([surveyId])
  @@map("questions")
}

model Choice {
  id         BigInt @id @default(autoincrement())
  questionId BigInt
  label      String
  order      Int

  question Question @relation(fields: [questionId], references: [id])

  @@index([questionId])
  @@map("choices")
}

model Response {
  id          BigInt   @id @default(autoincrement())
  surveyId    String
  submittedAt DateTime @default(now())

  answers Answer[]
  survey  Survey   @relation(fields: [surveyId], references: [id])

  @@index([surveyId])
  @@index([submittedAt])
  @@map("responses")
}

model Answer {
  id           BigInt   @id @default(autoincrement())
  responseId   BigInt
  questionId   BigInt
  valueText    String?
  valueChoices String[]

  question Question @relation(fields: [questionId], references: [id])
  response Response @relation(fields: [responseId], references: [id])

  @@index([responseId])
  @@index([questionId])
  @@index([responseId, questionId])
  @@map("answers")
}

enum QuestionType {
  short
  long
  single
  multi
  file_read
}

enum Provider {
  google
  kakao
  local
}
